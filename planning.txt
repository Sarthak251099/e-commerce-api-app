Planning the project development: Give 4 hours daily

to be completed by 10th Aug 2024

to include api to add user
api to add product 
create a login system
have django admin
classify products using tags
create superuser
document using swagger


Leetcode journey: 

4 hours daily
complete 50 easy interview questions
4 questions per day
should be completed by 15 august

doucment every day

Day 1: partial success

hours: 5

working on creating a new project.
installing requirements and setting up docker environment
setting up docker-compose
creating a git repo
creating an access token on docker hub and saving it as repo secret on github

Day 2: success

hours: 8

creating user model
adding superuser functionality - docker-compose run --rm app sh -c "python manage.py createsuperuser"
create django admin page work
adding custom fields to the user admin class
using django admin to update and view users
adding auto documentation to our project - very easy just add drf_spectacular in requirements, add it in app and update the app/url to enable. Update the setting to add the dictionsayr
added api for user creation and authentication 
create the endpoint send a post request to the endpoint
create a serializer that handles the post request and has the requrired fields
user modelserializer
update the create method in the serializer
view is going to extend from apicreateapiview
the url file has to be updated with the user create endpoint
create a test to get authentication token on validated credentials
create a new serializer that extends from serializer class
get the email and password
user = authenticate(username, email)
override a validate method
create a new view that extends from oauthtoken view
this view is responsible for triggering the validate method and responding back with token
create a class for authenticated api requests
to retrieve users, create a me endpoint
create a view for this(make sure it accepts only get request by extending it from the correct class) and make sure that it required the permission class and authorization classes
the view will send back the user (user needs to go throught the serializer first)
user the same serializer used for create
for update url, use the me url
add a method to the serializerto be able to update the instance

day 3:

creating product model
making a test case to create a model in test_model file

2 days wasted due to unforseen circumstances

day 4:

